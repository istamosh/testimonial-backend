"""update testimonial schema with new fields

Revision ID: 1a8692bf849b
Revises: 8669be3af2dc
Create Date: 2025-06-16 21:49:54.366722

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1a8692bf849b'
down_revision = '8669be3af2dc'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # First, add nullable columns
    with op.batch_alter_table('testimonial', schema=None) as batch_op:
        batch_op.add_column(sa.Column('first_name', sa.String(length=60), nullable=True))
        batch_op.add_column(sa.Column('last_name', sa.String(length=60), nullable=True))
        batch_op.add_column(sa.Column('role_company', sa.String(length=120), nullable=True))
        batch_op.add_column(sa.Column('censor_first_name', sa.Boolean(), nullable=False, server_default='0'))
        batch_op.add_column(sa.Column('censor_last_name', sa.Boolean(), nullable=False, server_default='0'))
        batch_op.add_column(sa.Column('consent_given', sa.Boolean(), nullable=False, server_default='1'))

    # Migrate existing data: extract first and last names from nameOrEmail
    connection = op.get_bind()
    result = connection.execute(sa.text("SELECT id, nameOrEmail FROM testimonial WHERE nameOrEmail IS NOT NULL"))
    
    for row in result:
        name_parts = row.nameOrEmail.strip().split()
        if len(name_parts) >= 2:
            first_name = name_parts[0]
            last_name = ' '.join(name_parts[1:])
        elif len(name_parts) == 1:
            # If only one name, use it as first name and set last name to a placeholder
            first_name = name_parts[0]
            last_name = "User"
        else:
            # If empty or invalid, set default values
            first_name = "Anonymous"
            last_name = "User"
        
        connection.execute(
            sa.text("UPDATE testimonial SET first_name = :fn, last_name = :ln WHERE id = :id"),
            {"fn": first_name, "ln": last_name, "id": row.id}
        )

    # Now make first_name and last_name NOT NULL
    with op.batch_alter_table('testimonial', schema=None) as batch_op:
        batch_op.alter_column('first_name', nullable=False)
        batch_op.alter_column('last_name', nullable=False)
        batch_op.drop_column('linkedin_url')
        batch_op.drop_column('nameOrEmail')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('testimonial', schema=None) as batch_op:
        batch_op.add_column(sa.Column('nameOrEmail', sa.VARCHAR(length=120), nullable=False))
        batch_op.add_column(sa.Column('linkedin_url', sa.VARCHAR(length=255), nullable=False))
        batch_op.drop_column('consent_given')
        batch_op.drop_column('censor_last_name')
        batch_op.drop_column('censor_first_name')
        batch_op.drop_column('role_company')
        batch_op.drop_column('last_name')
        batch_op.drop_column('first_name')

    # ### end Alembic commands ###
